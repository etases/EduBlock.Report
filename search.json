[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EduBlock",
    "section": "",
    "text": "Preface\nThis is the final report of EduBlock"
  },
  {
    "objectID": "Introduction.html#overview",
    "href": "Introduction.html#overview",
    "title": "3  Project Introduction",
    "section": "3.1 Overview",
    "text": "3.1 Overview\n\n3.1.1 Project Information\n\n\n3.1.2 Project Team"
  },
  {
    "objectID": "Introduction.html#background",
    "href": "Introduction.html#background",
    "title": "3  Project Introduction",
    "section": "3.2 Background",
    "text": "3.2 Background"
  },
  {
    "objectID": "Introduction.html#existing-systems",
    "href": "Introduction.html#existing-systems",
    "title": "3  Project Introduction",
    "section": "3.3 Existing Systems",
    "text": "3.3 Existing Systems"
  },
  {
    "objectID": "Introduction.html#business-opportunity",
    "href": "Introduction.html#business-opportunity",
    "title": "3  Project Introduction",
    "section": "3.4 Business Opportunity",
    "text": "3.4 Business Opportunity"
  },
  {
    "objectID": "Introduction.html#software-product-vision",
    "href": "Introduction.html#software-product-vision",
    "title": "3  Project Introduction",
    "section": "3.5 Software Product Vision",
    "text": "3.5 Software Product Vision"
  },
  {
    "objectID": "Introduction.html#project-scope-limitations",
    "href": "Introduction.html#project-scope-limitations",
    "title": "3  Project Introduction",
    "section": "3.6 Project Scope & Limitations",
    "text": "3.6 Project Scope & Limitations"
  },
  {
    "objectID": "Management.html#overview",
    "href": "Management.html#overview",
    "title": "4  Project Management Plan",
    "section": "4.1 Overview",
    "text": "4.1 Overview\n\n4.1.1 WBS & Estimation\n\n\n4.1.2 Project Objectives\n\n\n4.1.3 Project Risks"
  },
  {
    "objectID": "Management.html#management-approach",
    "href": "Management.html#management-approach",
    "title": "4  Project Management Plan",
    "section": "4.2 Management Approach",
    "text": "4.2 Management Approach\n\n4.2.1 Project Process\n\n\n4.2.2 Quality Management\n\n\n4.2.3 Training Plan\n\n\n\n\n\n\n\n\n\nArea\nParticipants\nWhen, Duration\nWaiver Criteria\n\n\n\n\nBlockchain\nProject Team\n20/07/2022, 2 weeks\nMandatory\n\n\nHyperledger Fabric\nProject Team\n01/10/2022, 2 weeks\nMandatory for Backend Team\n\n\nJava, Javalin\nProject Team\n01/09/2022, 1 weeks\nMandatory"
  },
  {
    "objectID": "Management.html#master-schedule",
    "href": "Management.html#master-schedule",
    "title": "4  Project Management Plan",
    "section": "4.3 Master Schedule",
    "text": "4.3 Master Schedule"
  },
  {
    "objectID": "Management.html#project-organization",
    "href": "Management.html#project-organization",
    "title": "4  Project Management Plan",
    "section": "4.4 Project Organization",
    "text": "4.4 Project Organization"
  },
  {
    "objectID": "Management.html#project-communication",
    "href": "Management.html#project-communication",
    "title": "4  Project Management Plan",
    "section": "4.5 Project Communication",
    "text": "4.5 Project Communication\n\n4.5.1 Communication Plan\n\n\n\n\n\n\n\n\n\n\nItem\nTarget\nPurpose\nWhen\nType\n\n\n\n\nDiscord\nProject Team\nReview meeting & Status report\nMonday, Friday\nVoice, Remote\n\n\nGoogle Meeting\nProject Team & Supervisor\nReview meeting, Sprint revision & Closeup\nWednesday\nVoice, Remote\n\n\nMessenger\nProject Team & Supervisor\nMeeting planning, Q&A & Status report\nEveryday\nText, Remote\n\n\nFU Library\nProject Team\nPair programming & Code review\nPlanned\nOffline\n\n\n\n\n\n4.5.2 External Interfaces"
  },
  {
    "objectID": "Management.html#configuration-management",
    "href": "Management.html#configuration-management",
    "title": "4  Project Management Plan",
    "section": "4.6 Configuration Management",
    "text": "4.6 Configuration Management\n\n4.6.1 Tools & Infrastructures\n\n4.6.1.1 Common\n\n\n\nType\nTool\n\n\n\n\nVersion Control\nGit, GitHub\n\n\nUML\nPlantUML, Graphviz\n\n\nDeployment\nDocker\n\n\nProject Management\nQuarto, GitHub Projects\n\n\n\n\n\n\n4.6.2 Backend\n\n\n\n\n\n\n\nType\nTool\n\n\n\n\nProgramming Language\nJava\n\n\nLibrary\nJavalin, Fabric SDKs, HSCore, Guava, Genson, EvalEx, JWT\n\n\nCompiler\nJDK, Lombok\n\n\nUI\nTinyLog, JLine, Fabric CLI\n\n\nDBMS\nH2, Hibernate, Minifabric\n\n\nIDE / Editor\nIntelliJ IDEA, VSCode\n\n\n\n\n\n4.6.3 Frontend\n\n\n\nType\nTool\n\n\n\n\nProgramming Language\nTypeScript\n\n\nLibrary\nReact\n\n\nCompiler\nNode\n\n\nUI\nReact\n\n\nIDE / Editor\nVSCode\n\n\n\n\n\n4.6.4 Document Management\nWe use Quarto to build documents from Markdown files and use GitHub to manage the files and their changes. A participant will create a new branch to edit the files, create pull requests and wait for the project manager to review the changes and merge to the main branch. Then, it’ll be built in three outputs: a website using GitHub Pages for visualization, A PDF document & A MS-Word document.\n\n\n4.6.5 Source Code Management\nWe manage the source code by using GitHub. Endpoints of the project will be upload into separated repositories. Once the code is changed, the participant will create a new branch, create a relevant pull request, and wait for code owners to review and merge to the main branch."
  },
  {
    "objectID": "Requirement.html#overall-description",
    "href": "Requirement.html#overall-description",
    "title": "5  Software Requirement Specification",
    "section": "5.1 Overall Description",
    "text": "5.1 Overall Description\n\n5.1.1 Product Overview\nThis is the software requirement specification for the project “EduBlock”. EduBlock is an web-application that will help the school to manage their student’s records, more specifically, the students and teachers can reduce paper’s work to manage their records. Lately, the school has been using paper to manage their student’s record, which is not efficient and not environmental friendly. EduBlock will help the school to manage their student’s records in a more efficient way, although there are some other 3rd party applications that can help school to keep their student’s records, but it is not really efficient and safe, our application use blockchain technology to make sure the data is safe and secure. Every step of the process that need to be work with the records will be tracked by EduBlock, so the school can easily track the data and make sure the data is not being tampered.\n\n\n5.1.2 Business Rules\n\nThe application will be used by the students, teachers, staff and admin."
  },
  {
    "objectID": "Requirement.html#user-requirements",
    "href": "Requirement.html#user-requirements",
    "title": "5  Software Requirement Specification",
    "section": "5.2 User Requirements",
    "text": "5.2 User Requirements\n\nThe Academic record management web-app has four active actors: Student, Teacher, Staff and Administrator.\nStudents can view their academic record.\nTeachers can manage their class and view their students’ academic record.\nStaff can manage the classroom and view the academic record of the students, assign or delete teacher from the class, assign student to class, create new class."
  },
  {
    "objectID": "Requirement.html#functional-requirements",
    "href": "Requirement.html#functional-requirements",
    "title": "5  Software Requirement Specification",
    "section": "5.3 Functional Requirements",
    "text": "5.3 Functional Requirements\n\n5.3.1 System Functional Overview\nThe system is designed to provide a platform for students to view their academic records, teachers to view their students’ academic records, staff to view the academic records of students, create new class.\n\n\n5.3.2 Admin Features\n\n5.3.2.1 UC-1 Admin Login\n\nDescription: Admin can login with their username and password.\nActors: Admin.\nPreconditions: Admin has an account.\nPostconditions: Admin can access the system.\nFlow of Events:\n\nAdmin go to EduBlock.\nAdmin enters their username and password.\nSystem verifies the username and password.\nSystem displays the dashboard.\n\nExceptions:\n\nIf the username or password is incorrect, the system will display an error message.\n\n\n\n\n5.3.2.2 UC-2 Admin view list of accounts\n\nDescription: Admin can view list of all accounts.\nActors: Admin\nPreconditions: Admin is logged in.\nPostconditions: System show list of all accounts.\nFlow of Events:\n\nAdmin go to EduBlock.\nAdmin login with username and password.\nAdmin click on “Account”.\nSystem show list of all accounts.\n\nAlternate Flow:\n\nSystem displays notification “No account found” if there is no account.\n\nException:\n\nSystem displays notification “No account found” if there is no account.\n\n\n\n\n5.3.2.3 UC-3 Admin view account details\n\nDescription: Admin can view account details.\nActors: Admin\nPreconditions: Admin is logged in.\nPostconditions: System show account details.\nFlow of Events:\n\nAdmin go to EduBlock.\nAdmin login with username and password.\nAdmin click on “Account”.\nAdmin click on “Details” (human icon) on actions column.\nSystem show account details.\n\nAlternate Flow:\n\nSystem displays notification “No account found” if there is no account.\n\nException:\n\nSystem displays notification “No account found” if there is no account.\n\n\n\n\n5.3.2.4 UC-4 Admin create (multiple) account\n\nDescription: Admin can create (multiple) account for each role such as staff, student, teacher.\nActors: Admin\nPreconditions: Admin is logged in.\nPostconditions: System create (multiple) account.\nFlow of Events:\n\nAdmin go to EduBlock.\nAdmin login with username and password.\nAdmin click on “Account”.\nAdmin click on “Create” button.\nAdmin fill in the form.\nAdmin can click “Add Account” button to add more account.\nAdmin click on “Create” button.\nSystem create account(s).\n\nAlternate Flow:\n\nSystem displays notification if the form is not filled correctly.\n\nException:\n\nSystem displays notification if the form is not filled correctly.\n\n\n\n\n5.3.2.5 UC-5 Admin search account\n\nDescription: Admin can search account by text, username, email, id, first name and last name.\nActors: Admin\nPreconditions: Admin is logged in.\nPostconditions: System show list of accounts that match the search criteria.\nFlow of Events:\n\nAdmin go to EduBlock.\nAdmin login with username and password.\nAdmin click on “Account”.\nAdmin click on “Search” button.\nAdmin input text to search account.\nAdmin add search criteria.\nSystem show list of accounts that match the search criteria.\n\nAlternate Flow:\n\nSystem displays notification “No account found” if there is no account that match the search criteria.\n\nException:\n\nSystem displays notification “No account found” if there is no account that match the search criteria.\n\n\n\n\n\n5.3.3 Staff Features\n\n5.3.3.1 UC-6 Staff Login\n\nDescription: Staff can login with their username and password.\nActors: Staff.\nPreconditions: Staff has an account.\nPostconditions: Staff can access the system.\nFlow of Events:\n\nStaff go to EduBlock.\nStaff enters their username and password.\nSystem verifies the username and password.\nSystem redirect Staff to dashboard.\n\nExceptions:\n\nIf the username or password is incorrect, the system will display an error message.\n\n\n\n\n5.3.3.2 UC-7 Staff view list of accounts\n\nDescription: Staff can view list of all accounts.\nActors: Staff\nPreconditions: Staff is logged in.\nPostconditions: System show list of all accounts.\nFlow of Events:\n\nStaff go to EduBlock.\nStaff login with username and password.\nStaff click on “Account”.\nSystem show list of all accounts.\n\nAlternate Flow:\n\nSystem displays notification “No account found” if there is no account.\n\nException:\n\nSystem displays notification “No account found” if there is no account.\n\n\n\n\n5.3.3.3 UC-8 Staff view account list by role\n\nDescription: Staff can view list of accounts by role.\nActors: Staff\nPreconditions: Staff is logged in.\nPostconditions: System show list of accounts by role.\nFlow of Events:\n\nStaff go to EduBlock.\nStaff login with username and password.\nStaff click on “Account”.\nStaff click on role’s name to view list of accounts by role.\nSystem show list of accounts by role.\n\nAlternate Flow:\n\nSystem displays notification “No account found” if there is no account.\n\nException:\n\nSystem displays notification “No account found” if there is no account.\n\n\n\n\n5.3.3.4 UC-9 Staff view account details\n\nDescription: Staff can view account details.\nActors: Staff\nPreconditions: Staff is logged in.\nPostconditions: System show account details.\nFlow of Events:\n\nStaff go to EduBlock.\nStaff login with username and password.\nStaff click on “Account”.\nStaff click on “Details” (human icon) on actions column.\nSystem show account details.\n\nAlternate Flow:\n\nSystem displays notification “No account found” if there is no account.\n\nException:\n\nSystem displays notification “No account found” if there is no account.\n\n\n\n\n5.3.3.5 UC-10 Staff search account\n\nDescription: Staff can search account by text, username, email, id, first name and last name.\nActors: Staff\nPreconditions: Staff is logged in.\nPostconditions: System show list of accounts that match the search criteria.\nFlow of Events:\n\nStaff go to EduBlock.\nStaff login with username and password.\nStaff click on “Account”.\nStaff click on “Search” button.\nStaff input text to search account.\nStaff add search criteria.\nSystem show list of accounts that match the search criteria.\n\nAlternate Flow:\n\nSystem displays notification “No account found” if there is no account that match the search criteria.\n\nException:\n\nSystem displays notification “No account found” if there is no account that match the search criteria.\n\n\n\n\n5.3.3.6 UC-11 Staff view class list\n\nDescription: Staff can view list of all classes.\nActors: Staff\nPreconditions: Staff is logged in.\nPostconditions: System show list of all classes.\nFlow of Events:\n\nStaff go to EduBlock.\nStaff login with username and password.\nStaff click on “Classroom”.\nSystem show list of all classes.\n\nAlternate Flow:\n\nSystem displays notification “No class found” if there is no class.\n\nException:\n\nSystem displays notification “No class found” if there is no class.\n\n\n\n\n\n5.3.4 Teacher Features\n\n\n5.3.5 Student Features"
  },
  {
    "objectID": "Requirement.html#non-functional-requirements",
    "href": "Requirement.html#non-functional-requirements",
    "title": "5  Software Requirement Specification",
    "section": "5.4 Non-Functional Requirements",
    "text": "5.4 Non-Functional Requirements\n\n5.4.1 External Interfaces\n\nCustom Fabric network\n\n\n\n5.4.2 Quality Attributes\nOur application ensures the following quality attributes:\n\nUsability: The application is easy to use and understand. The application is designed to be intuitive and easy to use. The application is designed to be used by both teachers and students.\nReliability: The application is designed to be reliable. The application is designed to be used with blockchain technology to ensure data integrity.\nPerformance: The application is designed to be fast and responsive.\nSecurity: The application is designed to be secure. The application is designed to be used with blockchain technology to ensure data integrity.\nMaintainability: The application is designed to be easy to maintain, update, and extend.\nPortability: The application is designed to be portable.\nScalability: The application is designed to be scalable and can be extended to support more users and more features.\nInteroperability: The application is designed to be interoperable with other applications.\nReusability: The application is designed to be reusable.\nTestability: The application is designed to be easy to test."
  },
  {
    "objectID": "Requirement.html#other-requirements",
    "href": "Requirement.html#other-requirements",
    "title": "5  Software Requirement Specification",
    "section": "5.5 Other Requirements",
    "text": "5.5 Other Requirements"
  },
  {
    "objectID": "Design.html#overall-description",
    "href": "Design.html#overall-description",
    "title": "6  Software Design Description",
    "section": "6.1 Overall Description",
    "text": "6.1 Overall Description\n\n6.1.1 Assumptions\n\n\n6.1.2 Design Constraints\n\n\n6.1.3 Technology Suggestion"
  },
  {
    "objectID": "Design.html#system-architecture-design",
    "href": "Design.html#system-architecture-design",
    "title": "6  Software Design Description",
    "section": "6.2 System Architecture Design",
    "text": "6.2 System Architecture Design\n\n6.2.1 Overall Architecture\n\n\n\nFigure 6.1: Overall architecture\n\n\n\n\n\n\n\n\n\nComponent\nDescription\n\n\n\n\nChain Node (CN)\nA node of the blockchain. This stores the records and handles the history and transaction requests from the Request Server (Change/View the score, information, etc.)\n\n\nRequest Server\nThe off-chain backend of a CN. This stores the pending requests from the user and is the only way to call a request to the CN. Each Request Server may have a different way to handle user requests (Voting, Direct Request, etc.)\n\n\nFrontend Server\nProvide the UX/UI for interacting with the Request Server\n\n\n\n\n\n6.2.2 System Architecture\n\n\n6.2.3 Package Diagram\n\n\n\nFigure 6.2: Package Diagram of Request Server\n\n\n\n\n\n\n\n\n\nPackage Name\nDescription\n\n\n\n\nroot\nMain classes\n\n\napi\nThe abstract classes & interfaces\n\n\nentity\nThe entities of the database\n\n\nhandler\nThe handlers of the endpoints of the REST API server\n\n\ninternal\nInternal classes used by other packages\n\n\ninternal/student\nThe instances of the Student Updater\n\n\nmodel\nThe input / output objects\n\n\nmodel/input\nThe input objects for the handlers\n\n\nmodel/output\nThe output objects returned from the handlers\n\n\nmodel/fabric\nThe models used internally by the student updater"
  },
  {
    "objectID": "Design.html#system-detailed-design",
    "href": "Design.html#system-detailed-design",
    "title": "6  Software Design Description",
    "section": "6.3 System Detailed Design",
    "text": "6.3 System Detailed Design\n\n6.3.1 Class Specification\n\n\n\nFigure 6.3: Class Diagram of the Request Server\n\n\n\n\n6.3.2 Account\n\n\n\n\n\n\n\n\nField Name\nType\nDescription\n\n\n\n\nid\nlong\nThe account id\n\n\nusername\nString\nThe username\n\n\nhashedPassword\nString\nThe hashed password\n\n\nsalt\nString\nThe salt of the password\n\n\nrole\nString\nThe role of the account\n\n\ncreatedAt\nDate\nThe date when the account was created\n\n\nclassrooms\nList ClassTeacher\nThe list of references to the classrooms that the account participates if its role is Teacher\n\n\nrecordEntries\nList RecordEntry\nThe list of record entries related to the subjects the the account is teaching if its role is Teacher\n\n\nrequestedRecordEntries\nList RecordEntry\nThe list of verified record entries that the account requested to changes\n\n\napprovedRecordEntries\nList RecordEntry\nThe list of verified record entries that the account accepted\n\n\npendingRecordEntries\nList PendingRecordEntry\nThe list of pending record entries related to the subjects the the account is teaching if its role is Teacher\n\n\nrequestedPendingRecordEntries\nList PendingRecordEntry\nThe list of pending record entries that the account requested to changes\n\n\nhomeClassrooms\nList Classroom\nThe list of classrooms the the account is a homeroom teacher at\n\n\n\n\n\n6.3.3 Profile\n\n\n\n\n\n\n\n\nField Name\nType\nDescription\n\n\n\n\nid\nlong\nThe account id\n\n\naccount\nAccount\nThe reference to the Account object\n\n\nfirstName\nString\nThe first name\n\n\nlastName\nString\nThe last name\n\n\nmale\nboolean\nIs the person male? false if she is a female\n\n\navatar\nString\nThe link to the avatar image\n\n\nbirthDate\nDate\nThe date of the birthday\n\n\naddress\nString\nThe address\n\n\nphone\nString\nThe phone number\n\n\nemail\nString\nThe email\n\n\nupdated\nboolean\nThe flag indicates that the profile requires sychronization with the Chain Node\n\n\n\n\n\n6.3.4 Student\n\n\n\n\n\n\n\n\nField Name\nType\nDescription\n\n\n\n\nid\nlong\nThe account id\n\n\naccount\nAccount\nThe reference to the Account object\n\n\nethnic\nString\nThe ethnic of the student\n\n\nfatherName\nString\nThe name of the father of the student\n\n\nfatherJob\nString\nThe job of the father of the student\n\n\nmotherName\nString\nThe name of the mother of the student\n\n\nmotherJob\nString\nThe job of the mother of the student\n\n\nguardianName\nString\nThe name of the guardian of the student\n\n\nguardianJob\nString\nThe job of the guardian of the student\n\n\nhomeTown\nString\nThe home town of the student\n\n\nclassrooms\nList ClassStudent\nThe list of references to the classrooms that the student participates\n\n\nrecords\nList Record\nThe list of records related to the classrooms that the student participates\n\n\nupdaterKey\nList UpdaterKey\nThe list of updater keys of the student. Used to allow outsiders to get infomation of the student.\n\n\n\n\n\n6.3.5 Classroom\n\n\n\n\n\n\n\n\nField Name\nType\nDescription\n\n\n\n\nid\nlong\nThe classroom id\n\n\nname\nString\nThe name of the classroom\n\n\ngrade\nint\nThe grade of the classroom\n\n\nyear\nint\nThe year of the classroom\n\n\nhomeroomTeacher\nAccount\nThe reference to the homeroom teacher of the classroom\n\n\nstudents\nList ClassStudent\nThe list of references to the students that participate in the classroom\n\n\nteachers\nList ClassTeacher\nThe list of references to the teachers that participate in the classroom\n\n\nrecords\nList Record\nThe list of records related to the classroom\n\n\n\n\n\n6.3.6 ClassStudent\n\n\n\nField Name\nType\nDescription\n\n\n\n\nid\nlong\nThe id of the reference\n\n\nclassroom\nClassroom\nThe reference to the classroom\n\n\nstudent\nStudent\nThe reference to the student\n\n\n\n\n\n6.3.7 ClassTeacher\n\n\n\n\n\n\n\n\nField Name\nType\nDescription\n\n\n\n\nid\nlong\nThe id of the reference\n\n\nclassroom\nClassroom\nThe reference to the classroom\n\n\nteacher\nAccount\nThe reference to the teacher\n\n\nsubjectId\nlong\nThe id of the subject that the teacher teaches\n\n\n\n\n\n6.3.8 Record\n\n\n\n\n\n\n\n\nField Name\nType\nDescription\n\n\n\n\nid\nlong\nThe record id\n\n\nclassroom\nClassroom\nThe reference to the classroom\n\n\nstudent\nStudent\nThe reference to the student\n\n\nrecordEntry\nList RecordEntry\nThe list of verified record entries related to the record\n\n\npendingRecordEntry\nList PendingRecordEntry\nThe list of pending record entries related to the record\n\n\n\n\n\n6.3.9 RecordEntry\n\n\n\n\n\n\n\n\nField Name\nType\nDescription\n\n\n\n\nid\nlong\nThe record entry id\n\n\nsubjectId\nlong\nThe id of the subject that the record entry is related to\n\n\nfirstHalfScore\nint\nThe score of the first semester of the subject\n\n\nsecondHalfScore\nint\nThe score of the second semester of the subject\n\n\nfinalScore\nint\nThe final score of the subject\n\n\nrequestDate\nDate\nThe date when the record entry was requested\n\n\napprovalDate\nDate\nThe date when the record entry was approved\n\n\nupdateComplete\nboolean\nThe flag indicates that the record entry was updated to the Chain Node\n\n\nteacher\nAccount\nThe reference to the teacher that teaches the subject\n\n\nrequester\nAccount\nThe reference to the account that requested the record entry\n\n\napprover\nAccount\nThe reference to the account that approved the record entry\n\n\nrecord\nRecord\nThe reference to the record that the record entry is related to\n\n\n\n\n\n6.3.10 PendingRecordEntry\n\n\n\n\n\n\n\n\nField Name\nType\nDescription\n\n\n\n\nid\nlong\nThe pending record entry id\n\n\nsubjectId\nlong\nThe id of the subject that the pending record entry is related to\n\n\nfirstHalfScore\nint\nThe score of the first semester of the subject\n\n\nsecondHalfScore\nint\nThe score of the second semester of the subject\n\n\nfinalScore\nint\nThe final score of the subject\n\n\nrequestDate\nDate\nThe date when the pending record entry was requested\n\n\nteacher\nAccount\nThe reference to the teacher that teaches the subject\n\n\nrequester\nAccount\nThe reference to the account that requested the pending record entry\n\n\nrecord\nRecord\nThe reference to the record that the pending record entry is related to\n\n\n\n\n\n6.3.11 UpdaterKey\n\n\n\n\n\n\n\n\nField Name\nType\nDescription\n\n\n\n\nid\nString\nThe unique key\n\n\nstudent\nStudent\nThe reference to the student that the key is related to\n\n\n\n\n\n6.3.12 Sequence Diagram"
  },
  {
    "objectID": "Design.html#data-database-design",
    "href": "Design.html#data-database-design",
    "title": "6  Software Design Description",
    "section": "6.4 Data & Database Design",
    "text": "6.4 Data & Database Design\n\n6.4.1 Database Design\n\n\n\nFigure 6.4: Database Design of the Request Server\n\n\n\n6.4.1.1 Account\n\n\n\n\n\n\n\n\n\n\n\n\nField Name\nType\nSize\nUnique\nNot Null\nFlag\nNotes\n\n\n\n\nID\nbigint\n\nx\nx\nPK\n\n\n\nUSERNAME\ncharacter varying\n255\nx\nx\n\n\n\n\nHASHEDPASSWORD\ncharacter varying\n255\n\nx\n\n\n\n\nSALT\ncharacter varying\n255\n\nx\n\n\n\n\nROLE\ncharacter varying\n255\n\nx\n\n\n\n\nCREATEDAT\ntimestamp\n\n\nx\n\n\n\n\n\n\n\n6.4.1.2 Profile\n\n\n\n\n\n\n\n\n\n\n\n\nField Name\nType\nSize\nUnique\nNot Null\nFlag\nNotes\n\n\n\n\nACCOUNT_ID\nbigint\n\nx\nx\nPK, FK\n\n\n\nADDRESS\ncharacter varying\n255\n\nx\n\n\n\n\nAVATAR\ncharacter varying\n255\n\nx\n\n\n\n\nBIRTHDATE\ntimestamp\n\n\nx\n\n\n\n\nEMAIL\ncharacter varying\n255\n\nx\n\n\n\n\nFIRSTNAME\ncharacter varying\n255\n\nx\n\n\n\n\nLASTNAME\ncharacter varying\n255\n\nx\n\n\n\n\nMALE\nboolean\n\n\nx\n\n\n\n\nPHONE\ncharacter varying\n255\n\nx\n\n\n\n\nUPDATED\nboolean\n\n\nx\n\nUsed internally by student updater\n\n\n\n\n\n6.4.1.3 Student\n\n\n\n\n\n\n\n\n\n\n\n\nField Name\nType\nSize\nUnique\nNot Null\nFlag\nNotes\n\n\n\n\nACCOUNT_ID\nbigint\n\nx\nx\nPK, FK\n\n\n\nETHNIC\ncharacter varying\n255\n\nx\n\n\n\n\nFATHERJOB\ncharacter varying\n255\n\nx\n\n\n\n\nFATHERNAME\ncharacter varying\n255\n\nx\n\n\n\n\nGUARDIANJOB\ncharacter varying\n255\n\nx\n\n\n\n\nGUARDIANNAME\ncharacter varying\n255\n\nx\n\n\n\n\nHOMETOWN\ncharacter varying\n255\n\nx\n\n\n\n\nMOTHERJOB\ncharacter varying\n255\n\nx\n\n\n\n\nMOTHERNAME\ncharacter varying\n255\n\nx\n\n\n\n\n\n\n\n6.4.1.4 Classroom\n\n\n\n\n\n\n\n\n\n\n\n\nField Name\nType\nSize\nUnique\nNot Null\nFlag\nNotes\n\n\n\n\nID\nbigint\n\nx\nx\nPK\n\n\n\nNAME\ncharacter varying\n255\n\nx\n\n\n\n\nGRADE\ncharacter varying\n255\n\nx\n\n\n\n\nHOMEROOMTEACHER_ID\nbigint\n\n\nx\nFK\n\n\n\nSTART_YEAR\ninteger\n\n\nx\n\n\n\n\n\n\n\n6.4.1.5 Class Student\n\n\n\nField Name\nType\nSize\nUnique\nNot Null\nFlag\nNotes\n\n\n\n\nID\nbigint\n\nx\nx\nPK\n\n\n\nCLASSROOM_ID\nbigint\n\n\nx\nFK\n\n\n\nSTUDENT_ID\nbigint\n\n\nx\nFK\n\n\n\n\n\n\n6.4.1.6 Class Teacher\n\n\n\n\n\n\n\n\n\n\n\n\nField Name\nType\nSize\nUnique\nNot Null\nFlag\nNotes\n\n\n\n\nID\nbigint\n\nx\nx\nPK\n\n\n\nCLASSROOM_ID\nbigint\n\n\nx\nFK\n\n\n\nTEACHER_ID\nbigint\n\n\nx\nFK\n\n\n\nSUBJECTID\nbigint\n\n\nx\n\nDefined in the system’s config\n\n\n\n\n\n6.4.1.7 Record\n\n\n\n\n\n\n\n\n\n\n\n\nField Name\nType\nSize\nUnique\nNot Null\nFlag\nNotes\n\n\n\n\nID\nbigint\n\nx\nx\nPK\n\n\n\nCLASSROOM_ID\nbigint\n\n\nx\nFK\n\n\n\nSTUDENT_ACCOUNT_ID\nbigint\n\n\nx\nFK\n\n\n\n\n\n\n6.4.1.8 Record Entry\n\n\n\n\n\n\n\n\n\n\n\n\nField Name\nType\nSize\nUnique\nNot Null\nFlag\nNotes\n\n\n\n\nID\nbigint\n\nx\nx\nPK\n\n\n\nRECORD_ID\nbigint\n\n\nx\nFK\n\n\n\nREQUESTER_ID\nbigint\n\n\n\nFK\n\n\n\nTEACHER_ID\nbigint\n\n\n\nFK\n\n\n\nAPPROVER_ID\nbigint\n\n\n\nFK\n\n\n\nAPPROVALDATE\ntimestamp\n\n\nx\n\n\n\n\nREQUESTDATE\ntimestamp\n\n\nx\n\n\n\n\nFIRSTHALFSCORE\ndouble precision\n\n\nx\n\n\n\n\nSECONDHALFSCORE\ndouble precision\n\n\nx\n\n\n\n\nFINALSCORE\ndouble precision\n\n\nx\n\n\n\n\nSUBJECTID\nbigint\n\n\nx\n\nDefined in the system’s config\n\n\nUPDATECOMPLETE\nboolean\n\n\nx\n\nUsed internally by student updater\n\n\n\n\n\n6.4.1.9 Pending Record Entry\n\n\n\n\n\n\n\n\n\n\n\n\nField Name\nType\nSize\nUnique\nNot Null\nFlag\nNotes\n\n\n\n\nID\nbigint\n\nx\nx\nPK\n\n\n\nRECORD_ID\nbigint\n\n\nx\nFK\n\n\n\nREQUESTER_ID\nbigint\n\n\nx\nFK\n\n\n\nTEACHER_ID\nbigint\n\n\nx\nFK\n\n\n\nREQUESTDATE\ntimestamp\n\n\nx\n\n\n\n\nFIRSTHALFSCORE\ndouble precision\n\n\nx\n\n\n\n\nSECONDHALFSCORE\ndouble precision\n\n\nx\n\n\n\n\nFINALSCORE\ndouble precision\n\n\nx\n\n\n\n\nSUBJECTID\nbigint\n\n\nx\n\nDefined in the system’s config\n\n\n\n\n\n6.4.1.10 Updater Key\n\n\n\n\n\n\n\n\n\n\n\n\nField Name\nType\nSize\nUnique\nNot Null\nFlag\nNotes\n\n\n\n\nID\ncharacter varying\n255\nx\nx\nPK\n\n\n\nSTUDENT_ACCOUNT_ID\nbigint\n\n\nx\nFK\n\n\n\n\n\n\n\n6.4.2 Data File Design\n\n\n\n\n\n\n\n\nFile Name\nType\nNotes\n\n\n\n\ndb\nFolder\nThe folder of The H2 Database files\n\n\nupdater\nFolder\nContains the data files of the local student updater"
  },
  {
    "objectID": "Testing.html#overall-description",
    "href": "Testing.html#overall-description",
    "title": "7  Software Testing Documentation",
    "section": "7.1 Overall Description",
    "text": "7.1 Overall Description\n\n7.1.1 Test Model\nWe apply the V-model in our project, which is a development of the waterfall model. Testing is carried out concurrently with the software development cycle in the V-model, where a testing phase corresponds to a phase of software development.\n\n\n7.1.2 Testing Levels\nAbout the Testing levels in our project, we apply all those levels including Unit testing, Integration testing, System testing and Acceptance testing.\nWith Unit testing, we test each small module in the system, each class and function. Eg (………)\nWith Integration testing is a type of testing in which individual software modules or functions are logically integrated and tested in groups together. For instance, we can test the interoperability of two functions, add 1 item and search for the item to see if they interact well with each other, after successfully creating an item, we can proceed to search for the newly created item. or not.\nSystem testing is the last test phase to determine whether the system is about to deliver satisfying the requirements and goals. It tests the whole functionality and interface of the system. For instance, a database test for a system test is used to see if the data displayed on the system matches the data in the database.\nFinally, with Acceptance Test, similar to System Test but usually tested by customers, the purpose is to see if the software meets the customer’s requirements or not.\n\n\n7.1.3 Testing Types\nFunctional testing is checking if the system is working according to the business requirements and is performed in every level of testing. Non-Functional testing is similar to Functional testing in that both occur in all levels of testing. Non-functional testing is primarily concerned with the software’s other features, such as its security and if data is exposed by straightforward queries in any input field. Structural testing is often considered a type of white box testing. Instead than focusing on the software’s functionality, this method examines what is happening inside the program. Structural testing is also applicable at all testing levels. Changes Testing is done to determine whether or not the program is functioning correctly after bugs have been fixed."
  },
  {
    "objectID": "Testing.html#test-plan",
    "href": "Testing.html#test-plan",
    "title": "7  Software Testing Documentation",
    "section": "7.2 Test Plan",
    "text": "7.2 Test Plan\n\n7.2.1 Test Stages\n\n\n\n\n\n\n\n\n\n\nType of Test\nStage of Test\n\n\n\n\n\n\n\n\nUnit\nIntegration\nSystem\nAcceptance\n\n\nFunction Test\nX\nX\nX\nX\n\n\nUser Interface Test\n\n\n\n\n\n\nPerformance Test\nX\nX\nX\nX\n\n\nLoad, Stress, Volume test\nX\nX\nX\nX\n\n\nSecurity test\nX\nX\nX\nX\n\n\nData integrity test\nX\nX\nX\nX\n\n\n\n\n\n7.2.2 Resources\n\n7.2.2.1 Human Resources\n\n\n\nWorker/ Doer\nRole\nSpecifice Responsibilities/Comments\n\n\n\n\nTienHQ\n\n\n\n\nTuLX\n\n\n\n\nKhoaND\n\n\n\n\nUyCHA\n\n\n\n\nKhoiNM\n\n\n\n\n\n\n\n7.2.2.2 Environment\n\n\n\nPurpose\nTool\nProvider\nVersion\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7.2.3 Test Milestones\n\n\n\nMilestone Task\nEfford (md)\nStart Date\nEnd Date\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n7.2.4 Deliverables\n\n\n\nNo\nDeliverables\nDue Data"
  },
  {
    "objectID": "Testing.html#test-cases",
    "href": "Testing.html#test-cases",
    "title": "7  Software Testing Documentation",
    "section": "7.3 Test Cases",
    "text": "7.3 Test Cases\n• Unit Test Cases: Report_Unit-Test-Case.xls\n• Other Test Cases: Report_Test-Case-Document.xls"
  },
  {
    "objectID": "Testing.html#test-reports",
    "href": "Testing.html#test-reports",
    "title": "7  Software Testing Documentation",
    "section": "7.4 Test Reports",
    "text": "7.4 Test Reports\nTest Report has been fully integrated in Unit_Test-Case and Test-Case-Document."
  },
  {
    "objectID": "Release.html#deliverable-package",
    "href": "Release.html#deliverable-package",
    "title": "8  Release Package & User Guides",
    "section": "8.1 Deliverable Package",
    "text": "8.1 Deliverable Package\n\n8.1.1 Source Codes & Documents\n\n\n\n\n\n\n\n\n\n\nNo.\nItems\nSub-Items\nType\nVersion\n\n\n\n\nCode package\n\n\n\n\n\n\n1\nEduBlock\nEduBlock Client\nNew\n1.0\n\n\n2\nBlockchain Network\nBlockchain Chaincode\nNew\n1.0\n\n\n3\nOCR\nRecord Table Processor\nNew\n1.0\n\n\nDatabase\n\n\n\n\n\n\n1\nTables\naccounts.sql\nNew\n1.0\n\n\n\n\nclassrooms.sql\nNew\n1.0\n\n\n\n\nsubjects.sql\nNew\n1.0\n\n\nDocuments\n\n\n\n\n\n\n1\nRequirement\nSRS_v1.0.docx\nNew\n1.0\n\n\n2\nDeployment\nUserGuide_v1.0.docx\nNew\n1.0\n\n\n\n\n\n8.1.2 Known Issues, Limitations & Restrictions"
  },
  {
    "objectID": "Release.html#installation-guides",
    "href": "Release.html#installation-guides",
    "title": "8  Release Package & User Guides",
    "section": "8.2 Installation Guides",
    "text": "8.2 Installation Guides\n\n8.2.1 System Requirements\nOS: any\nCPU: at least 4 cores\nRAM: at least 4Gb\nNETWORK: required\nSOFTWARE: Docker\n\n\n8.2.2 Setup Files\n\nDockerfile.backend\nDockerfile.frontend\nDockerfile.ocr\n\n\n\n8.2.3 Installation Instruction"
  },
  {
    "objectID": "Release.html#user-manual",
    "href": "Release.html#user-manual",
    "title": "8  Release Package & User Guides",
    "section": "8.3 User Manual",
    "text": "8.3 User Manual\n\n8.3.1 Terms & Definitions\n\n\n\nNo.\nTerm\nDefinition\n\n\n\n\n01\nF.FT\nFeature\n\n\n02\nR.ADM\nAdmin\n\n\n03\nR.STF\nStaff\n\n\n04\nR.TCH\nTeacher\n\n\n05\nR.STD\nStudent\n\n\n06\nR.ANY\nAny role\n\n\n\n\n\n8.3.2 System Requirements\nOS: any\nCPU: any\nRAM: at least 1Gb\nNETWORK: required\n\n\n8.3.3 Application Usage\n\n8.3.3.1 Overview\n\n\n\n\n\n\n\n\n\nNo.\nFeature\nRole\nNote\n\n\n\n\n01\nCreate new account\nR.ADM\n\n\n\n02\nView account list\nR.ADM, R.STF\n\n\n\n03\nView profile\nR.ANY\nEach role have different behavior\n\n\n04\nUpdate profile\nR.ADM, R.STF\nEach role have different behavior\n\n\n05\nUpdate password\nR.ANY\nEach role have different behavior\n\n\n06\nCreate new classroom\nR.STF\n\n\n\n07\nView classroom list\nR.STF, R.TCH, R.STD\nEach role have different behavior\n\n\n08\nView classroom information\nR.STF, R.TCH, R.STD\n\n\n\n09\nView students of classroom\nR.STF, R.TCH, R.STD\n\n\n\n10\nView teachers of classroom\nR.STF, R.TCH, R.STD\n\n\n\n11\nUpdate classroom information\nR.STF\n\n\n\n12\nUpdate student in classroom\nR.STF\n\n\n\n13\nUpdate teacher in classroom\nR.STF\n\n\n\n14\nView update request list\nR.TCH\n\n\n\n15\nVerify update request\nR.TCH\n\n\n\n16\nRequest update record\nR.TCH, R.STD\n\n\n\n\n\n\n8.3.3.2 Feature 01: Create new account\nDescription:\n\nAdmin create account for other user usage\n\nDetails:\n\nR.ADM\n\nStep 1: Click Account on the left navigation bar to navigate to account list page\nStep 2: Click Create at the top left of the page to open a modal with form\nStep 3: Input user First name, Last name and select a role for user\nStep 4: (Optional) Click Add at the bottom left of the form to add more account and repeat from Step 1\nStep 5: Click Create at the bottom right of the form to confirm the account creation\n\n\n\n\n8.3.3.3 Feature 02: View account list\nDescription:\n\nAdmin, Staff view the account list to manage account information and find reference for other operations\n\nDetails:\n\nR.ADM\n\nStep 1: Click Account on the left navigation bar to navigate to account list page\nStep 2: (Optional) Click Search to reveal filter options below\nStep 2.1: Select search field on the left\nStep 2.2: Input search text on the right\nStep 2.3: Click Search button at the right most to apply list filter\nStep 3: View list of account\nStep 4: (Optional) Click page number at the top right to view other accounts\n\n\n\n\n8.3.3.4 Feature 03: View profile\nDescription:\n\nAdmin, Staff view user profile\nUser view personal profile\n\nDetails:\n\nR.ANY (Personal)\n\nStep 1: Click personal card at the bottom of the Vertical Navigation bar to navigate to the profile page\n\nR.ADM, R.STF\n\nStep 1: Click Account on the left navigation bar to navigate to account list page\nStep 2: Look for the specific account row in table\nStep 3: Click Details in the Actions column to navigate to the profile page of that account\n\n\n\n\n8.3.3.5 Feature 04: Update profile\nDescription:\n\nAdmin, Staff update personal profile\nStaff update Teacher, Student profile\n\nDetails\n\nR.ADM, R.STF (Personal)\n\nStep 1: Click personal card at the bottom of the Vertical Navigation bar to navigate to the profile page\nStep 2: Click Update in the profile section to open a modal with form\nStep 3: Change the form data to desired value\nStep 4: Click Confirm to save the changes.\n\nR.STF\n\nStep 1: Click Account on the left navigation bar to navigate to account list page\nStep 2: Look for the specific account row in table\nStep 3: Click Update in the Actions column to open an update modal with form\nStep 4: Change the form data to desired value\nStep 5: Click Confirm to save the changes\n\n\n\n\n8.3.3.6 Feature 05: Update password\nDescription:\n\nAdmin update other user password\nUser self update password\n\nDetails\n\nR.ANY (Personal)\n\nStep 1: Click personal card at the bottom of the Vertical Navigation bar to navigate to the profile page\nStep 2: Click Update password at the top right of the page to open a modal with form\nStep 3: Input the new password\nStep 4: Click Confirm to save the new password\n\nR.ADM\n\nStep 1: Click Account on the left navigation bar to navigate to account list page\nStep 2: Look for the specific account row in table\nStep 3: Click Update password in the Actions column to open an update modal with form\nStep 4: Input the new password\nStep 5: Click Confirm to save the new password\n\n\n\n\n8.3.3.7 Feature 06: Create new classroom\nDescription:\n\nStaff Create new classroom in the system\n\nDetails\n\nR.STF\n\nStep 1: Click Classroom on the left navigation bar to navigate to classroom list page\nStep 2: Click Create at the top left of the page to open a modal with form\nStep 3: Change the form data to desired value\nStep 4: Click Confirm at the bottom right of the modal to save the created classroom\n\n\n\n\n8.3.3.8 Feature 07: View classroom list\nDescription:\n\nStaff view the list of all the classroom in the system\nTeacher view the list of all the classroom being taught by that teacher\nStudent view the list of all the classroom that student taking part in\n\nDetails\n\nR.STF\n\nStep 1: Click Classroom on the left navigation bar to navigate to classroom list page\n\nR.TCH, R.STD\n\nStep 1: The list of classroom is in the dashboard page\n\n\n\n\n8.3.3.9 Feature 08: View classroom information\nDescription:\n\nStaff view classroom information\nTeacher view information of the classroom being taught by that teacher\nStudent view information of the classroom that student taking part in\n\nDetails\n\nR.STF\n\nStep 1: Click Classroom on the left navigation bar to navigate to classroom list page\nStep 2: Look for the specific classroom row in table\nStep 3: Click Details in the Actions column to navigate to the classroom details page\n\nR.TCH, R.STD\n\nStep 1: Click Dashboard on the left navigation bar to navigate to classroom list page\nStep 2: Look for the specific classroom row in table\nStep 3: Click Details in the Actions column to navigate to the classroom information page\n\n\n\n\n8.3.3.10 Feature 09: View students of classroom\nDescription:\n\nStaff view all the student in a specific classroom\nTeacher view all the student in the classroom being taught by that teacher\nStudent view all the student in the classroom that student taking part in\n\nDetails\n\nR.STF, R.TCH, R.STD\n\nStep 1: Follow Feature 08 to navigate to the classroom information page\nStep 2: Click Student which is the center tab at the top of the page to navigate to student list of that classroom\n\n\n\n\n8.3.3.11 Feature 10: View teachers of classroom\nDescription:\n\nStaff view all the teacher in a specific classroom\nTeacher view all the teacher in the classroom being taught by that teacher\nStudent view all the teacher in the classroom that student taking part in\n\nDetails\n\nR.STF, R.TCH, R.STD\n\nStep 1: Follow Feature 08 to navigate to the classroom information page\nStep 2: Click Teacher which is right most tab at the top of the page to navigate to teacher list of that classroom\n\n\n\n\n8.3.3.12 Feature 11: Update classroom information\nDescription:\n\nStaff update a specific classroom information\n\nDetails\n\nR.STF\n\nStep 1: Follow Feature 08 to navigate to the classroom information page\nStep 2: Click Details which is right most tab at the top of the page to navigate to details page of that classroom\nStep 3: Click Update at the bottom of the page to open a modal with form\nStep 4: Change the form data to desired value\nStep 5: Click Confirm at the bottom of the modal to save changes\n\n\n\n\n8.3.3.13 Feature 12: Update student in classroom\nDescription:\n\nStaff change the student of a specific classroom\n\nDetails\n\nR.STF\n\nStep 1: Follow Feature 09 to navigate to the classroom student page\nStep 2: Look for a specific account row in the table (May skip to Step 4)\nStep 3: Click Remove in the Actions column to remove student from classroom\nStep 4: Click Add at the top left of the page to open a modal with form\nStep 5: Change the form data to desired value\nStep 6: Click Confirm at the bottom right of the modal to save changes\n\n\n\n\n8.3.3.14 Feature 13: Update teacher in classroom\nDescription:\n\nStaff change the teacher of a specific classroom\n\nDetails\n\nR.STF\n\nStep 1: Follow Feature 10 to navigate to the classroom teacher page\nStep 2: Look for a specific account row in the table (May skip to Step 4)\nStep 3: Click Remove in the Actions column to remove teacher from classroom\nStep 4: Click Add at the top left of the page to open a modal with form\nStep 5: Change the form data to desired value\nStep 6: Click Confirm at the bottom right of the modal to save changes\n\n\n\n\n8.3.3.15 Feature 14: View update request list\nDescription:\n\nTeacher view list of request for updating record value\n\nDetails\n\nR.TCH\n\nStep 1: Click Request on the left navigation bar to navigate to request list page\n\n\n\n\n8.3.3.16 Feature 15: Verify update request\nDescription:\n\nTeacher verify request waiting for verification\n\nDetails\n\nR.TCH\n\nStep 1: Follow Feature 14 to navigate to the request list page\nStep 2: Look for the specific request row in table\nStep 3: Click Approve or Reject to approve or reject the request\n\n\n\n\n8.3.3.17 Feature 16: Request update record\nDescription:\n\nTeacher or student of same classroom request updating record for that student\n\nDetails\n\nR.TCH\n\nStep 1: Follow Feature 09 to navigate to student profile page\nStep 2: Look for the record need update in the record table at the bottom of the page\nStep 3: Click Update in the Actions column to open a modal with form\nStep 4: Change the form data to desired value\nStep 5: Click Confirm to send the request\n\nR.STD\n\nStep 1: Click personal card at the bottom of the Vertical Navigation bar to navigate to the profile page\nStep 2: Look for the record need update in the record table at the bottom of the page\nStep 3: Click Update in the Actions column to open a modal with form\nStep 4: Change the form data to desired value\nStep 5: Click Confirm to send the request\n\n\n\n\n\n8.3.4 Troubleshooting"
  }
]